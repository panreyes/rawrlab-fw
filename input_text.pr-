Global
	string cadena="abcdefghijklmnñopqrstuvwxyzçABCDEFGHIJKLMNÑOPQRSTUVWXYZÇ1234567890?!& áéíóúÁÉÍÓÚ.,";
	
//			a b c d e f g h i j k l m n
//			ñ o p q r s t u v w x y z ç
//			A B C D E F G H I J K L M N
//			Ñ O P Q R S T U V W X Y Z Ç
//			1 2 3 4 5 6 7 8 9 0 ? ! &  
//			á é í ó ú Á É Í Ó Ú . ,BorFin
	
	int size_fuente=50; //tamaño de las casillas del teclado
	int filas_cadena=6;	//filas en las que se dividira la cadena(la última debe estar completa)
	string texto_introducido[5]; //aqui esta el texto que se introduce
	int fuente_teclado;	//Fuente del text_input
	string lang_txts[4]; //textos traducidos del input
end

//-----------------------------------------------------------------------
// proceso text_input muestra el teclado
//-----------------------------------------------------------------------

Process text_input(x1,y1,longitud_max,texto_j1,texto_j2,texto_j3,texto_j4);
private
	int posicion;
	int texto_players[5];
Begin

	switch(ops.lenguaje)
		case 1:
			lang_txts[0]="player ";
			lang_txts[1]="Fin";
			lang_txts[2]="Bor";	
		end
		case 2:
			lang_txts[0]="player ";
			lang_txts[1]="Fi";
			lang_txts[2]="Esb";	
		end
		case 3:
			lang_txts[0]="Joueur ";
			lang_txts[1]="Fin";
			lang_txts[2]="Sup";
		end
		default:
			lang_txts[0]="Player ";
			lang_txts[1]="End";
			lang_txts[2]="Del";
		end
	end

	graph=map_new(((len(cadena)+2)/filas_cadena)*size_fuente,filas_cadena*size_fuente,bpp);
	drawing_map(0,graph);
	drawing_color(rgb(0,255,0));
	draw_rect(0,0,(((len(cadena)+2)/filas_cadena)*size_fuente)-1,(filas_cadena*size_fuente)-1);
	
	from player=1 to players;
		texto_introducido[player]="";
	end
	
	texto_players[1]=texto_j1;
	texto_players[2]=texto_j2;
	texto_players[3]=texto_j3;
	texto_players[4]=texto_j4;
	
	from player=1 to players;
		if(texto_players[player])
			write(fuente_teclado,(ancho_pantalla/2)-1,20*player+100,5,lang_txts[0]+player+":");
			write_string(fuente_teclado,(ancho_pantalla/2)+1,20*player+100,3,&texto_introducido[player]);
			cursor(x1,y1,player,longitud_max);
		end
	end
	
	for(y=(size_fuente/2);y<((filas_cadena*size_fuente)+(size_fuente/2));y+=size_fuente)
		for(x=(size_fuente/2);x<((((len(cadena)+2)/filas_cadena)*size_fuente)+(size_fuente/2));x+=size_fuente)
			if(posicion==len(cadena)+1)
				write(fuente_teclado,x+x1-(((len(cadena)+2)/filas_cadena)*size_fuente/2),y+y1-(filas_cadena*size_fuente/2),4,lang_txts[1]);
			elseif(posicion==len(cadena))
				write(fuente_teclado,x+x1-((((len(cadena)+2)/filas_cadena))*size_fuente/2),y+y1-(filas_cadena*size_fuente/2),4,lang_txts[2]);
			else
				write(fuente_teclado,x+x1-(((len(cadena)+2)/filas_cadena)*size_fuente/2),y+y1-(filas_cadena*size_fuente/2),4,cadena[posicion]);
			end
			posicion++;
			if(posicion>len(cadena)+1) break; end
		end
		if(posicion>len(cadena)+1) break; end
	end
	
	x=x1;
	y=y1;
	
	loop
		if(!exists(TYPE cursor)) break; end
		frame;
	end
	map_unload(0,graph);
End

//-----------------------------------------------------------------------
// proceso cursor para introducir texto
//-----------------------------------------------------------------------

process cursor(x1,y1,player,longitud_max);
private
	int posicion;
	int letra_selecionada;
	int pulsando;
begin

	graph=map_new(size_fuente,size_fuente,bpp);
	drawing_map(0,graph);
	switch(player)
		case 1:
			drawing_color(rgb(255,0,0));
			draw_box(0,0,(size_fuente*1/3),(size_fuente*1/3));
			set_text_color(rgb(255,255,255));
			map_put (0,graph,write_in_map(0,"1",4),(size_fuente*1/6),(size_fuente*1/6));
		end
		case 2:
			drawing_color(rgb(0,255,0));
			draw_box((size_fuente*2/3),0,size_fuente-1,(size_fuente*1/3));
			set_text_color(rgb(255,255,255));
			map_put (0,graph,write_in_map(0,"2",4),(size_fuente*5/6),(size_fuente*1/6));
		end
		case 3:
			drawing_color(rgb(255,255,0));
			draw_box(0,(size_fuente*2/3),(size_fuente*1/3),size_fuente-1);
			set_text_color(rgb(255,255,255));
			map_put (0,graph,write_in_map(0,"3",4),(size_fuente*1/6),(size_fuente*5/6));
		end
		case 4:
			drawing_color(rgb(0,0,255));
			draw_box((size_fuente*2/3),(size_fuente*2/3),size_fuente-1,size_fuente-1);
			set_text_color(rgb(255,255,255));
			map_put (0,graph,write_in_map(0,"4",4),(size_fuente*5/6),(size_fuente*5/6));
		end
	end
	draw_line(0,0,0,(size_fuente*1/3)-1);
	draw_line(0,0,(size_fuente*1/3)-1,0);
	
	draw_line((size_fuente*2/3)-1,0,size_fuente-1,0);
	draw_line(size_fuente-1,0,size_fuente-1,(size_fuente*1/3)-1);
	
	draw_line(0,size_fuente*2/3,0,size_fuente-1);
	draw_line(0,size_fuente-1,(size_fuente*1/3)-1,size_fuente-1);
	
	draw_line(size_fuente-1,size_fuente-1,size_fuente-1,(size_fuente*2/3)-1);
	draw_line((size_fuente*2/3)-1,size_fuente-1,size_fuente-1,size_fuente-1);
	
//	mouse.graph=map_new(size_fuente/2,size_fuente/2,32);
//	drawing_map(0,mouse.graph);
//	draw_line(size_fuente/4,0,size_fuente/4,size_fuente/2);
//	draw_line(0,size_fuente/4,size_fuente/2,size_fuente/4);
	
	loop
		
		if(get_button(player,b_derecha))
			posicion++;
		end
		if(get_button(player,b_izquierda))
			posicion--;
		end
		if(get_button(player,b_arriba))
			posicion-=((len(cadena)+2)/filas_cadena);
		end
		if(get_button(player,b_abajo))
			posicion+=((len(cadena)+2)/filas_cadena);
		end
		if(get_button(player,b_2))
			if(posicion==len(cadena)+1) //Fin
				break;
			elseif(posicion==len(cadena)) //Borra
				texto_introducido[player]=substr(texto_introducido[player],0,len(texto_introducido[player])-1);
			else //Escribe
				if(len(texto_introducido[player])<longitud_max)
					texto_introducido[player]+=""+cadena[posicion];
				end
			end
		end
		if(get_button(player,b_1))
			texto_introducido[player]=substr(texto_introducido[player],0,len(texto_introducido[player])-1);
		end
		
		// -- RATÓN:
		if(players==1)
			if(mouse.y < father.y+(filas_cadena*size_fuente/2) and mouse.y > father.y-(filas_cadena*size_fuente/2) and mouse.x < father.x+(((len(cadena)+2)/filas_cadena)*size_fuente/2) and mouse.x > father.x-(((len(cadena)+2)/filas_cadena)*size_fuente/2))
				posicion=((( (mouse.y-father.y+(filas_cadena*size_fuente/2))/size_fuente)*((len(cadena)+2)/filas_cadena)) + ((mouse.x-father.x+(((len(cadena)+2)/filas_cadena)*size_fuente/2))/(size_fuente) ));
			end
			
			if(mouse.left and pulsando==0) //Modo táctil
				if(posicion==len(cadena)+1) //Fin
					break;
				elseif(posicion==len(cadena)) //Borra
					texto_introducido[player]=substr(texto_introducido[player],0,len(texto_introducido[player])-1);
				else //Escribe
					if(len(texto_introducido[player])<longitud_max)
						texto_introducido[player]+=""+cadena[posicion];
					end
				end
				pulsando=1;
			end
		
			if(pulsando==1 and !mouse.left) pulsando=0; end
		end
		// -- FIN RATÓN
		
		if(posicion<0) posicion+=len(cadena)+2; end
		if(posicion>len(cadena)+1) posicion-=len(cadena)+2; end
		
		x=x1-(((len(cadena)+2)/filas_cadena)*size_fuente/2)+(size_fuente/2)+(size_fuente*(posicion mod ((len(cadena)+2)/filas_cadena)));
		y=y1-(filas_cadena*size_fuente/2)+(size_fuente/2)+(size_fuente*(posicion/((len(cadena)+2)/filas_cadena)));
		
		if(posicion==len(cadena)+1)
			letra_selecionada=write(fuente_teclado,(ancho_pantalla/2)+text_width(fuente_teclado,texto_introducido[player])+1,(20*player)+100,3,lang_txts[1]);
		else
			if(len(texto_introducido[player])<longitud_max)
				letra_selecionada=write(fuente_teclado,(ancho_pantalla/2)+text_width(fuente_teclado,texto_introducido[player])+1,(20*player)+100,3,cadena[posicion]);
			end
		end
		while(get_button(player,b_derecha) or get_button(player,b_izquierda) or get_button(player,b_arriba) or get_button(player,b_abajo) or get_button(player,b_1) or get_button(player,b_2))
			frame;
		end
		frame;
		delete_text(letra_selecionada);
	end
	map_unload(0,graph);
end
